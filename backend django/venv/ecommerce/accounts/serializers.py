
from django.contrib.auth import get_user_model

from rest_framework import serializers

from rest_framework_simplejwt.serializers import TokenObtainPairSerializer



User = get_user_model()

class UserRegisterSerializer(serializers.ModelSerializer):
    password = serializers.CharField(required= True, write_only = True)
    password2 = serializers.CharField(required = True, write_only = True)

    class Meta:
        model = User
        fields = ("username", "email", "password", "password2")
        extra_kwargs = {'password':{"write_only": True},
                        'password2': {"write_only" : True}
        } 

    def create(self, validated_data):
        username = validated_data.get('username')
        email = validated_data.get('email')
        password = validated_data.get('password')
        password2 = validated_data.get('password2')

        if password == password2:
            user = User(username = username, email = email)
            user.set_password(password)
            user.save()
            return user

        else:
            return serializers.ValidationError("Password and password2 must be same!!") 






class CustomTokenObtainPairSerializer(TokenObtainPairSerializer):
    def validate(self, attrs):
        data = super(CustomTokenObtainPairSerializer, self).validate(attrs)
        print("USERRRRRR : ................", self.user)
        data.update({'username':self.user.username})
        return data


























































































































































































































































































































































































































































































































































































































































